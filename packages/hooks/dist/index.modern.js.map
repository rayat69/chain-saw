{"version":3,"file":"index.modern.js","sources":["../src/useLocalStorage.ts","../src/useDarkMode.ts","../src/useSocket.ts"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\nfunction parseLocalData<V extends unknown>(value: V): string {\r\n  if (value instanceof Function) {\r\n    return JSON.stringify(value())\r\n  }\r\n  if (typeof value !== 'string') {\r\n    return JSON.stringify(value)\r\n  }\r\n  return value\r\n}\r\n\r\nconst useLocalStorage: UseLocalStorage = (key, value) => {\r\n  const [task, setTask] = useState(() => {\r\n    if (value instanceof Function) {\r\n      return value()\r\n    }\r\n    return value\r\n  })\r\n\r\n  useEffect(() => {\r\n    const data = window.localStorage.getItem(key)\r\n    if (!data) return\r\n\r\n    setTask(JSON.parse(data) as typeof task)\r\n  }, [key])\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(key, parseLocalData(task))\r\n  }, [task, key])\r\n\r\n  return [task, setTask]\r\n}\r\n\r\nexport { useLocalStorage }\r\n\r\nexport type UseLocalStorage = <V>(\r\n  key: string,\r\n  value: V | (() => V)\r\n) => [V, React.Dispatch<React.SetStateAction<V>>]\r\n","import { useCallback, useMemo } from 'react'\r\nimport { useLocalStorage } from './useLocalStorage'\r\n\r\nexport const useDarkmode = (key = 'rayat-portfolio-projects:dark') => {\r\n  const localStorageKey = useMemo(() => key, [key])\r\n\r\n  const [isDark, setIsDark] = useLocalStorage(localStorageKey, () => {\r\n    if (!window.localStorage.getItem(localStorageKey)) {\r\n      return window.matchMedia('(prefers-color-scheme: dark)').matches\r\n    }\r\n    return false\r\n  })\r\n\r\n  const toggle = useCallback(() => {\r\n    setIsDark(prevMode => !prevMode)\r\n  }, [setIsDark])\r\n\r\n  return { isDark, toggle }\r\n}\r\n","import { useEffect } from 'react'\r\nimport { Socket } from 'socket.io-client'\r\n\r\nexport const useSocket = (socket: Socket) => {\r\n  useEffect(() => {\r\n    socket.connect()\r\n    return () => {\r\n      if (socket.connected) {\r\n        socket.disconnect()\r\n      }\r\n    }\r\n  }, [socket])\r\n}\r\n"],"names":["parseLocalData","value","Function","JSON","stringify","useLocalStorage","key","useState","task","setTask","useEffect","data","window","localStorage","getItem","parse","setItem","useDarkmode","localStorageKey","useMemo","matchMedia","matches","isDark","setIsDark","toggle","useCallback","prevMode","useSocket","socket","connect","connected","disconnect"],"mappings":";;AAEA,SAASA,cAAT,CAA2CC,KAA3C;AACE,MAAIA,KAAK,YAAYC,QAArB,EAA+B;AAC7B,WAAOC,IAAI,CAACC,SAAL,CAAeH,KAAK,EAApB,CAAP;AACD;;AACD,MAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7B,WAAOE,IAAI,CAACC,SAAL,CAAeH,KAAf,CAAP;AACD;;AACD,SAAOA,KAAP;AACD;;IAEKI,eAAe,GAAoB,SAAnCA,eAAmC,CAACC,GAAD,EAAML,KAAN;AACvC,kBAAwBM,QAAQ,CAAC;AAC/B,QAAIN,KAAK,YAAYC,QAArB,EAA+B;AAC7B,aAAOD,KAAK,EAAZ;AACD;;AACD,WAAOA,KAAP;AACD,GAL+B,CAAhC;AAAA,MAAOO,IAAP;AAAA,MAAaC,OAAb;;AAOAC,EAAAA,SAAS,CAAC;AACR,QAAMC,IAAI,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4BR,GAA5B,CAAb;AACA,QAAI,CAACK,IAAL,EAAW;AAEXF,IAAAA,OAAO,CAACN,IAAI,CAACY,KAAL,CAAWJ,IAAX,CAAD,CAAP;AACD,GALQ,EAKN,CAACL,GAAD,CALM,CAAT;AAOAI,EAAAA,SAAS,CAAC;AACRE,IAAAA,MAAM,CAACC,YAAP,CAAoBG,OAApB,CAA4BV,GAA5B,EAAiCN,cAAc,CAACQ,IAAD,CAA/C;AACD,GAFQ,EAEN,CAACA,IAAD,EAAOF,GAAP,CAFM,CAAT;AAIA,SAAO,CAACE,IAAD,EAAOC,OAAP,CAAP;AACD;;IC7BYQ,WAAW,GAAG,SAAdA,WAAc,CAACX,GAAD;MAACA;AAAAA,IAAAA,MAAM;;;AAChC,MAAMY,eAAe,GAAGC,OAAO,CAAC;AAAA,WAAMb,GAAN;AAAA,GAAD,EAAY,CAACA,GAAD,CAAZ,CAA/B;;AAEA,yBAA4BD,eAAe,CAACa,eAAD,EAAkB;AAC3D,QAAI,CAACN,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4BI,eAA5B,CAAL,EAAmD;AACjD,aAAON,MAAM,CAACQ,UAAP,CAAkB,8BAAlB,EAAkDC,OAAzD;AACD;;AACD,WAAO,KAAP;AACD,GAL0C,CAA3C;AAAA,MAAOC,MAAP;AAAA,MAAeC,SAAf;;AAOA,MAAMC,MAAM,GAAGC,WAAW,CAAC;AACzBF,IAAAA,SAAS,CAAC,UAAAG,QAAQ;AAAA,aAAI,CAACA,QAAL;AAAA,KAAT,CAAT;AACD,GAFyB,EAEvB,CAACH,SAAD,CAFuB,CAA1B;AAIA,SAAO;AAAED,IAAAA,MAAM,EAANA,MAAF;AAAUE,IAAAA,MAAM,EAANA;AAAV,GAAP;AACD,CAfM;;ICAMG,SAAS,GAAG,SAAZA,SAAY,CAACC,MAAD;AACvBlB,EAAAA,SAAS,CAAC;AACRkB,IAAAA,MAAM,CAACC,OAAP;AACA,WAAO;AACL,UAAID,MAAM,CAACE,SAAX,EAAsB;AACpBF,QAAAA,MAAM,CAACG,UAAP;AACD;AACF,KAJD;AAKD,GAPQ,EAON,CAACH,MAAD,CAPM,CAAT;AAQD,CATM;;;;"}